import { styleTags, tags as t } from "@lezer/highlight";

export const jarvilHighlighting = styleTags({
  "for while if elif else return break continue": t.controlKeyword,
  "in not and or": t.operatorKeyword,
  "def type lambda let interface implements struct": t.definitionKeyword,
  import: t.moduleKeyword,
  print: t.keyword,
  None: t.null,
  VariableName: t.variableName,
  ArgName: t.variableName,
  "CallExpression/VariableName": t.function(t.variableName),
  "FunctionDefinition/VariableName": t.function(t.definition(t.variableName)),
  "StructTypeDefinition/VariableName": t.definition(t.typeName),
  "LambdaTypeDefinitionStatement/VariableName": t.definition(t.typeName),
  PropertyName: t.propertyName,
  "CallExpression/MethodAccess/ClassMethodCallExpression/PropertyName":
    t.function(t.propertyName),
  HashComment: t.lineComment,
  SlashComment: t.lineComment,
  BlockComment: t.blockComment,
  Boolean: t.bool,
  Number: t.number,
  String: t.string,
  self: t.self,
  FieldIdentifier: t.propertyName,
  TypeIdentifier: t.typeName,
  "int float str bool": t.typeName,
  ArithPlusOp: t.arithmeticOperator,
  ArithTimesOp: t.arithmeticOperator,
  CompareOp: t.compareOperator,
  "=": t.definitionOperator,
  "->": t.punctuation,
  "( )": t.paren,
  "[ ]": t.squareBracket,
  "{ }": t.brace,
  ".": t.derefOperator,
  ", ; :: :": t.separator,
});
