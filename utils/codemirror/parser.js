// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser, LocalTokenGroup} from "@lezer/lr"
import {indentation, newlines} from "./tokens"
import {trackIndent} from "./tokens.js"
import {jarvilHighlighting} from "./highlight"
const spec_identifier = {__proto__:null,or:22, and:24, not:30, self:68, True:98, False:98, break:106, continue:110, return:114, type:118, lambda:120, int:122, bool:124, str:126, float:128, let:140, if:150, elif:152, else:154, while:158, for:162, in:164, def:168, struct:172}
export const parser = LRParser.deserialize({
  version: 14,
  states: "=pOfQUOOP!vOUOOO#gQYO'#DaO#tQUO'#CjOOQQ'#Cn'#CnO$iQYO'#ClO%mQYO'#DQO&tQYO'#C|O'xQUO'#DROOQQ'#C|'#C|OOQQ'#Co'#CoO'}QUO'#DVO(UQUO'#DXO(]QUO'#D[OOQQ'#Cl'#ClOOQQ'#Ci'#CiOOQQ'#Eu'#EuOOQQ'#Et'#EtO(dQUO'#EsOOQR'#FO'#FOOOQR'#Er'#ErOOQR'#E]'#E]QfQUOOOOQQ'#C}'#C}OOQQ'#Db'#DbOOQQ'#Dd'#DdO(lQUO'#DfO(vQUO'#ETO(vQUO'#DsO#tQUO'#DxO#tQUO'#D|O(vQUO'#EOO(vQUO'#ERPOOQ'#C]'#C]P({OUO'#EmP)ZOpO'#C`POOO)C@a)C@aO#tQUO,58}O#tQUO,58}O#tQUO,58}O#tQUO,58|O#tQUO,58}O#tQUO,58}OOQQ,59U,59UO)fQUO'#CsOOQQ,59[,59[O)mQUO,59dO#tQUO,59fOOQQ,59k,59kO)mQUO,59mO)rQYO,59pOOQQ,59q,59qO)|QUO,59qO*RQYO'#EzOOQQ,59s,59sO*`QUO,59sO*eQYO'#EzOOQQ,59v,59vO*rQUO,59vO*wQUO,59xOOQR,5;_,5;_OOQR-E8Z-E8ZO*|QYO,5:QOOQQ'#DQ'#DQO+WQUO,5:oO+`QUO,5:_O+eQYO,5:dO+eQYO,5:hO+lQUO,5:jO+qQUO,5:mPOOO,5;X,5;XP+vOQO,5;XP+{OUO,5;XPOOO'#E['#E[P,WOpO,58zPOOO,58z,58zO-ZQYO1G.iOOQQ1G.i1G.iO-bQYO1G.iO-iQYO1G.hO.kQYO1G.iO.rQYO1G.iOOQQ,59_,59_O.yQUO,59_OOQQ'#Cw'#CwO/OQYO1G/OO0SQYO1G/QO0ZQUO1G/XOOQQ1G/[1G/[O#tQUO,59rOOQQ1G/]1G/]O#tQUO'#E^O0`QUO,5;fOOQQ1G/_1G/_O#tQUO,5;gOOQQ1G/b1G/bOOQQ1G/d1G/dO0nQUO1G/nO0sQUO1G0ZO0xQUO1G/yO1PQUO'#DwO1UQVO1G0OOOQR1G0S1G0SO#tQUO1G0UO2uQUO1G0XPOOO1G0s1G0sP2}OQO1G0sPOOO-E8Y-E8YPOOO1G.f1G.fOOQQ1G.y1G.yOOQQ7+$g7+$gOOQQ7+$l7+$lOOQQ7+$s7+$sOOQQ1G/^1G/^O3SQYO,5:xOOQQ-E8[-E8[O3dQYO1G1RO3nQUO7+%YO3sQUO'#EVOOQR7+%u7+%uO3xQYO7+%eO4SQUO'#DuOOQR7+%e7+%eO4XQVO,5:cO4^QVO7+%jO#tQUO'#EbO5}QUO7+%jO+eQYO7+%pOOQQ'#Dv'#DvO6SQUO'#FPO6XQbO7+%sO6aQUO7+%sPOOO7+&_7+&_O#tQUO'#E_O6fQUO7+&mO7YQUO<<HtO7aQVO,5:qOOQR<<IP<<IPO7fQUO,5:aOfQUO1G/}OOQR-E8`-E8`O5}QUO<<IUO+eQYO,5:|OOQR<<IU<<IUOOQR<<I[<<I[O6nQUO,5;kOOQR<<I_<<I_O6nQUO<<I_O7nQbO<<I_O7vQYO,5:yOOQQ-E8]-E8]OOQQ'#DS'#DSO6nQUO'#DoO6nQUO'#DpO6nQUO'#DqOOQQ'#E}'#E}O7}QUO'#E|O8VQbOAN>`O8bQUOAN>`O8gQUO1G0]O8oQbO1G/{O8wQUO1G/{O8|QVO7+%iOOQRAN>pAN>pOOQR1G0h1G0hO9WQUO1G1VO5}QUOAN>yOOQRAN>yAN>yO6nQUOAN>yO#tQUO1G0eO9`QUO,5:ZO9eQUO,5:[O9jQUO,5:]O6nQUO'#E`O9oQUO,5;hO6nQUOG23zO9wQbOG23zOOQQ'#EZ'#EZO:SQUO'#EYO:XQUO'#EXOOQR'#EW'#EWOOQR'#Ec'#EcO:aQVO7+%wOOQR7+%g7+%gO6nQUO7+%gO:oQbO7+%gOOQR<<IT<<ITO2xQUO'#EaO:wQUO7+&qOOQRG24eG24eO5}QUOG24eO;PQYO7+&PO6nQUO1G/uOOQQ1G/v1G/vO6nQUO1G/wOOQQ,5:z,5:zOOQQ-E8^-E8^OOQQLD)fLD)fO6nQUOLD)fO6nQUO,5:tOOQR,5:s,5:sOOQR-E8a-E8aOOQR<<Ic<<IcO5}QUO<<IROOQR<<IR<<IRO6nQUO<<IRO;ZQUO,5:{OOQQ-E8_-E8_OOQRLD*PLD*PO;`QUO7+%aO;eQUO7+%cOOQQ!$'MQ!$'MQOOQQ1G0`1G0`OOQRAN>mAN>mO5}QUOAN>mO6nQUO1G0gOOQQ<<H{<<H{OOQQ<<H}<<H}OOQRG24XG24XOOQQ7+&R7+&R",
  stateData: ";p~O#`OS#]OSQPQRPQ#[PQ#bPQ~O_ROa^OfZOo[OrgO}]O!R^O!VhO!XiO!ZjO!]kO!hlO!mmO!qnO!soO!vpO#jUO#kRO#lRO#mSO~OQqORqO#[rO#bsO~OWuOXvOYwOZyO[zO~O!SxO#Z!TX#^!TX~P#UO_ROa^OfZOo[OrgO}]O!R^O#jUO#kRO#lRO#mSO~Of|Oj!OOo!POW`XX`XY`XZ`X[`X!S`X#Z`X#^`Xe`Xh`Xm`X|`X!P`X~OWtXXtXYtXZtX[tXftXjtXotXwvX!StX#ZtX#^tXetXhtXmtX|tX!PtX~Of|OWpXXpXYpXZpX[pXjpXopX!SpX#ZpX#^pXepXhpXmpX|pX!PpX~Ow!RO~Oe!TO~P#tOm!WO~P#tO|!ZO~P#tO#Z!^O#^!^O~O#Z!YX#^!YX~P#tO#j!aO~OQqORqO#Z!hO#`!jO~O#c!kO#d!kO#e!mO~Oe!tO~P#tO#j!vO~Oe!zOh!{O~P#UOe!|O~Oh!}Om#nXe#nX~P#UOm#PO~Oh!}O!P#QO|#nX~P#UO|#RO~O|#SO~O#Z!Ya#^!Ya~P#UO!^#TO!x#UO~O!S#VO~O!P#WO~P#UO!t#ZO~Of#[O~O#Z#]O~OQqORqO#Z#]O~O#c!kO#d!kO#e#`O~OXvOYViZVi[Vi!SVi#ZVi#^VieVihVimVi|Vi!PVi~OWVi~P,cOWuO~P,cO#ZUi#^Ui~P#UOWuOXvOYwOZVi!SVi#ZVi#^VieVihVimVi|Vi!PVi~O[zO~P-sO[Vi~P-sOe#aO~Of|OWliXliYliZli[lijlioli!Sli#Zli#^lielihlimli|li!Pli~Om#cO~P#UOf|O~Oh!}Om#na|#nae#na~O!S#iO~O!P#jO~O!^#mO~P#tO#Z#oO~O!n#qO!o#rO_!lia!lif!lio!lir!li}!li!R!li!V!li!X!li!Z!li!]!li!h!li!m!li!q!li!s!li!v!li#W!li#j!li#k!li#l!li#m!li#Y!li#^!li~Oe#vO#j#tO~O#Z#xO~Oh#Qam#Qa|#Qae#Qa~P#UOh#yO|#oi~P#UOf#{O~O#Z#|O~O#Z#}O#^#}O~P#UOf$OO~O#X$PO~O!n#qO!o$RO_!lqa!lqf!lqo!lqr!lq}!lq!R!lq!V!lq!X!lq!Z!lq!]!lq!h!lq!m!lq!q!lq!s!lq!v!lq#W!lq#j!lq#k!lq#l!lq#m!lq#Y!lq#^!lq~O!P#WO~O!P$VO~O!P#WO!f$XO~Oe$YO~Oh#yO|#oq~Of$^Oo$_O}$`O!_$aO!`$aO!a$aO!b$aO#j$]O~Oe$cO~P6nO#X$eO~Oe$fO#j#tO~O!P#WO!f$nO~O!P$oO~P#UOh$sOe#pX~O!f$uO#Z![!R#^![!R~Oe$vO~O!vpO#j!vO~O!P#WO!f%OO~Oe%PO~O#Y%QO#^%QO~PfOh%ROe#si~Oh%WO~Om%XO~O!P%YO~Oh$sOe#pa~O!f%^O#Z![!Z#^![!Z~O!P%_O~O#Z%`O#^%`O~O!vpO#Y%bO#^%bO#j!vO~O!P#WO!f%eO~Oh%ROe#sq~Oh#Rq|#Rq~P#UO!P%oO~Oe%pO~O|%qO~O#m#jRXR~",
  goto: "1g#tP#uPP$OP$R$XPPPPP$u%fP%fP&T&r'aPP(OP'aP(['aP'aP'a(fP(f)T(f*OP&T&T+P&TPP&TP&TPP$R$RP$RP$RP$RPPPPPP*m*m*mP+SP+Y+]+d+SPPP+SP+SPP,`P+SP,j,m,f,q,u,y-P-Z-b-h-n-t-zPPPPPPPPP$OPPPP.Q.W.^.dPPPP/z0W0Z0a.W1aQtPQ!irR#^!jRtPXaOf$P$h!V`OZ[]fjmnuvwxyz|!P!{!}#Q#V#Z#q#y$P$h$o!U`OZ[]fjmnuvwxyz|!P!{!}#Q#V#Z#q#y$P$h$oR{R!X_ORZ[]fjmnuvwxyz|!P!{!}#Q#V#Z#q#y$P$h$o!X^ORZ[]fjmnuvwxyz|!P!{!}#Q#V#Z#q#y$P$h$o!XTORZ[]fjmnuvwxyz|!P!{!}#Q#V#Z#q#y$P$h$o!XYORZ[]fjmnuvwxyz|!P!{!}#Q#V#Z#q#y$P$h$oQ}TQ!QVQ#b!wR#d!yQ!w!OQ!y!RT$w$e$|!XXORZ[]fjmnuvwxyz|!P!{!}#Q#V#Z#q#y$P$h$o!WVORZ[]fjmnuvwxyz|!P!{!}#Q#V#Z#q#y$P$h$oQ!bkQ!clQ!foR!gp!WWORZ[]fjmnuvwxyz|!P!{!}#Q#V#Z#q#y$P$h$oq$a#{$V$X$^$_$`$n$s$u%O%W%Y%^%_%e%oR!UZXcOf$P$hR#n#VS#u#[$OR%f%RQ#X!dQ#Y!eQ$T#rQ$U#sQ$W#vQ$i$RQ$j$SQ$m$YQ$}$fQ%T$lQ%d%PQ%h%UQ%m%cR%r%nWcOf$P$hT$z$e$|R#k#UT${$e$|T$y$e$|T$x$e$|Q!lsR#_!lQfOS!_f$hR$h$PS#O!V!YR#g#OQ#z#hR$[#zQ$t$bR%[$tQ%S$kR%g%SQ#p#XR$Q#pQ$|$eR%a$|XeOf$P$hXdOf$P$hXbOf$P$hWQOf$P$hQ!SZU!V[|!{Q!Y]Q!`jQ!dmQ!enQ!nuQ!ovQ!pwQ!qxQ!ryQ!szQ!x!PQ#f!}Q#h#QQ#l#VQ#s#ZQ$S#qQ$Z#yR%V$oQ!X[Q!]]Q!u|R#e!{R![]Q$d#{R%i%WS$b#{%WQ$k$VQ$l$XQ$p$^Q$q$_Q$r$`Q%U$nQ%Z$sQ%]$uQ%c%OQ%j%YQ%k%^Q%l%_Q%n%eR%s%oQ#w#[R$g$O",
  nodeNames: "âš  LineComment HashComment SlashComment BlockComment Script AssignStatement BinaryExpression ArithPlusOp ArithTimesOp CompareOp or and UnaryExpression OnlyUnaryExpression not AtomicExpression Number String Atom CallAtom ) ( ArgList , MethodAccess . PropertyName PropertyAccess ] IndexAccess [ AtomStart Self self CallExpression VariableName ClassMethodCallExpression TypeIdentifier :: ParenthesizedExpression TupleExpression InnerTupleExpression ArrayExpression } { DictionaryExpression : SetExpression Boolean = ExpressionStatement BreakStatement break ContinueStatement continue ReturnStatement return LambdaTypeDefinitionStatement type lambda int bool str float TupleType ArrayType HashMapType -> VariableDeclarationStatement let RLambdaDefinition ArgName Body IfStatement if elif else WhileStatement while ForStatement for in FunctionDefinition def StructTypeDefinition struct StructBody StructStatement FieldNameTypeSpecStatement FieldNameTypeSpec FieldIdentifier",
  maxTerm: 127,
  context: trackIndent,
  nodeProps: [
    ["group", -6,6,51,52,54,56,58,"Statement Statement",-2,7,13,"Expression",-8,38,61,62,63,64,65,66,67,"Type",-6,69,74,78,80,83,85,"Statement"],
    ["openedBy", 21,"(",29,"[",44,"{"],
    ["closedBy", 22,")",31,"]",45,"}"]
  ],
  propSources: [jarvilHighlighting],
  skippedNodes: [0,1,2,3,4,92],
  repeatNodeCount: 8,
  tokenData: "0u~RpXY#V[]#Vpq#Vqr#qrs#|st%zwx&fxy(_yz(dz{(i{|(n|}(u}!O(z!O!P)Z!P!Q*t!Q!R+p!R![,t![!]/Q!^!_/_!_!`/g!`!a/_!c!}/o!}#O0a#O#P#h#P#Q0f#R#S/o#T#o/o#o#p0k#q#r0p$g;'S/o;'S;=`0Z<%lO/o~#[S#`~XY#V[]#Vpq#V#O#P#h~#kQYZ#V]^#V~#tP!_!`#w~#|OY~~$RX#m~OY#|Z]#|^r#|rs$ns#O#|#O#P$s#P;'S#|;'S;=`%t<%lO#|~$sO#m~~$vRO;'S#|;'S;=`%P;=`O#|~%UY#m~OY#|Z]#|^r#|rs$ns#O#|#O#P$s#P;'S#|;'S;=`%t;=`<%l#|<%lO#|~%wP;=`<%l#|~&PTQ~OY%zZ]%z^;'S%z;'S;=`&`<%lO%z~&cP;=`<%l%z~&kX#m~OY&fZ]&f^w&fwx$nx#O&f#O#P'W#P;'S&f;'S;=`(X<%lO&f~'ZRO;'S&f;'S;=`'d;=`O&f~'iY#m~OY&fZ]&f^w&fwx$nx#O&f#O#P'W#P;'S&f;'S;=`(X;=`<%l&f<%lO&f~([P;=`<%l&f~(dOf~~(iOe~~(nOX~U(uO#kQWS~(zOh~^)RP#lQWS!`!a)UW)ZO!fWU)`PjS!Q![)cQ)hUaQ!Q![)c!g!h)z!l!m*o#R#S)c#X#Y)z#^#_*oQ)}R{|*W}!O*W!Q![*^Q*ZP!Q![*^Q*cSaQ!Q![*^!l!m*o#R#S*^#^#_*oQ*tOaQ~*yQX~z{+P!P!Q+U~+UO#b~~+ZTR~OY+UZ]+U^;'S+U;'S;=`+j<%lO+U~+mP;=`<%l+UQ+u]aQ!O!P,n!Q![,t!d!e-`!g!h)z!l!m*o!q!r-z!z!{.`#R#S,t#U#V-`#X#Y)z#^#_*o#c#d-z#l#m.`Q,qP!Q![)cQ,yVaQ!O!P,n!Q![,t!g!h)z!l!m*o#R#S,t#X#Y)z#^#_*oQ-cR!Q!R-l!R!S-l#R#S-lQ-qRaQ!Q!R-l!R!S-l#R#S-lQ-}Q!Q!Y.T#R#S.TQ.YQaQ!Q!Y.T#R#S.TQ.cS!Q![.o!c!i.o#R#S.o#T#Z.oQ.tSaQ!Q![.o!c!i.o#R#S.o#T#Z.o~/VP!P~![!]/Y~/_Ow~~/dPY~!_!`#w~/lP!S~!_!`#w~/tV#j~!Q![/o!c!}/o#R#S/o#T#o/o$g;'S/o;'S;=`0Z<%lO/o~0^P;=`<%l/o~0fOo~~0kOm~~0pO}~~0uO|~",
  tokenizers: [indentation, newlines, 1, 2, 3, new LocalTokenGroup("j~RQYZXz{^~^O#d~~aP!P!Qd~iO#e~~", 25, 111)],
  topRules: {"Script":[0,5]},
  specialized: [{term: 118, get: value => spec_identifier[value] || -1}],
  tokenPrec: 1222
})
